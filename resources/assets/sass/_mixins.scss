// Mixins.

@mixin nl {
    margin: 0;
    padding: 0;
    text-indent: 0;
    list-style: none;
    list-style-position: outside;
}

@mixin cf {
    &::before,
    &::after {
        display: table;
        content: '';
    }

    &::after {
        clear: both;
    }

    .lt-ie8 & {
        zoom: 1;
    }
}

@mixin blocks-justify {
    text-align: justify;
    text-justify: newspaper;
}

// You can add your own mixins here:
@mixin text-hide {
    text-indent: rem(-9999);
    white-space: nowrap;

    overflow: hidden;
}

@mixin stretch {
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
}

@mixin input-typography {
    color: $grey_abbey;
    font-family: $helvetica;
    font-size: rem(18);
    font-weight: 300;

    &:disabled {
        color: #d0d2d4;
    }

    @include below($mobile) {
        font-size: rem(16);
    }
}

@mixin btn-clear {
    padding: 0;
    margin: 0;
    border: 0 none;
    outline: none;
    background: none;
}

// =============================================================================
// Медиа запросы
// =============================================================================

// меньше указанной величины (по умолчанию ширина)
@mixin below($width, $orientation: 'width') {
    @media screen and (max-#{$orientation}: $width) {
        @content;
    }
}

// больше указанной величины (по умолчанию ширина)
@mixin above($width, $orientation: 'width') {
    @media screen and (min-#{$orientation}: $width) {
        @content;
    }
}

// между первой и второй величиной (по умолчанию ширина)
@mixin between($minWidth, $maxWidth, $orientation: 'width') {
    @media screen and (min-#{$orientation}: $minWidth) and (max-#{$orientation}: $maxWidth) {
        @content;
    }
}

// =============================================================================
// Функции пересчета значений
// =============================================================================

@function rem($num) {
    $strip-unit: $num / ($num * 0 + 1);
    @return $strip-unit / 16 * 1rem;
}

@function em($num, $root: 16) {
    $strip-unit: $num / ($num * 0 + 1);
    @return $strip-unit / $root * 1em;
}

// =============================================================================
// Поддержка retina-изображений для фона
// =============================================================================

@mixin image-2x($image, $width, $height) {
    @media (min--moz-device-pixel-ratio: 1.3),
        (-o-min-device-pixel-ratio: 2.6/2),
        (-webkit-min-device-pixel-ratio: 1.3),
        (min-device-pixel-ratio: 1.3),
        (min-resolution: 1.3dppx) {
            //on retina, use image that's scaled by 2
            background-image: url($image);
            background-size: $width $height;
    }
}
